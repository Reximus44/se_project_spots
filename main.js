!function(){"use strict";const e={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit-btn",inactiveButtonClass:"modal__submit-btn_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},t=(e,t,r)=>{e.querySelector(`#${t.id}-error`).textContent="",t.classList.remove(r.inputErrorClass)},r=(e,t,r)=>{(e=>e.some((e=>!e.validity.valid)))(e)?o(t,r):(t.disabled=!1,t.classList.remove(r.inactiveButtonClass))},o=(e,t)=>{e.disabled=!0,e.classList.add(t.inactiveButtonClass)},n=e=>{document.querySelectorAll(e.formSelector).forEach((o=>{((e,o)=>{const n=Array.from(e.querySelectorAll(o.inputSelector)),a=e.querySelector(o.submitButtonSelector);r(n,a,o),n.forEach((s=>{s.addEventListener("input",(function(){((e,r,o)=>{console.log(r.validationMessage),r.validity.valid?t(e,r,o):((e,t,r)=>{e.querySelector(`#${t.id}-error`).textContent=t.validationMessage,t.classList.add(r.inputErrorClass)})(e,r,o)})(e,s,o),r(n,a,o)}))}))})(o,e)}))};n(e);function a(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Save",o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"Saving...";e.textContent=t?o:r}const s=document.querySelector(".profile__edit-btn"),l=document.querySelector(".profile__add-btn"),c=document.querySelector(".profile__avatar-btn"),i=document.querySelector(".profile__name"),d=document.querySelector(".profile__description"),u=document.querySelector("#add-card-form"),m=document.querySelector(".profile__avatar"),_=document.querySelector("#edit-modal"),h=_.querySelector(".modal__form"),f=(_.querySelector(".modal__close-btn"),_.querySelector("#profile-name-input")),v=_.querySelector("#profile-description-input"),S=document.querySelector("#add-card-modal"),y=S.querySelector(".modal__form"),b=S.querySelector(".modal__submit-btn"),p=(S.querySelector(".modal__close-btn"),S.querySelector("#add-card-name-input")),q=S.querySelector("#add-card-link-input"),E=document.querySelector("#avatar-modal"),k=E.querySelector(".modal__form"),g=(E.querySelector(".modal__submit-btn"),E.querySelector(".modal__close-btn"),E.querySelector("#profile-avatar-input")),L=document.querySelector("#delete-modal"),C=L.querySelector(".modal__form"),$=document.querySelector("#preview-modal"),j=$.querySelector(".modal__image"),U=$.querySelector(".modal__caption"),x=document.querySelector(".cards__list"),P=document.querySelector("#card-template");let I,A;const T=new class{constructor(e){let{baseUrl:t,headers:r}=e;this._baseUrl=t,this._headers=r}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then((e=>{if(e.ok)return e.json();Promise.reject(`Error: ${e.status}`)}))}getAppInfo(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then((e=>{if(e.ok)return e.json();Promise.reject(`Error: ${e.status}`)}))}addCard(e){let{name:t,link:r}=e;return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:r})}).then((e=>{if(e.ok)return e.json();Promise.reject(`Error: ${e.status}`)}))}editUserInfo(e){let{name:t,about:r}=e;return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:r})}).then((e=>{if(e.ok)return e.json();Promise.reject(`Error: ${e.status}`)}))}editAvatarInfo(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then((e=>{if(e.ok)return e.json();Promise.reject(`Error: ${e.status}`)}))}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then((e=>{if(e.ok)return e.json();Promise.reject(`Error: ${e.status}`)}))}changeLikeStatus(e,t){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:t?"DELETE":"PUT",headers:this._headers}).then((e=>{if(e.ok)return e.json();Promise.reject(`Error: ${e.status}`)}))}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"a1b47911-56f8-4c22-a365-89f4ae3c2c1b","Content-Type":"application/json"}});function w(e){document.addEventListener("keydown",B),e.addEventListener("mousedown",D),e.classList.add("modal_opened")}T.getAppInfo().then((e=>{let[t,r]=e;t.forEach((e=>{const t=O(e);x.append(t)})),i.textContent=r.name,d.textContent=r.about,m.src=r.avatar})).catch(console.error);const D=e=>{(e.currentTarget===e.target||e.target.classList.contains("modal__close-btn")||"delete-modal-cancel-btn"===e.target.id)&&N(e.currentTarget)};function B(e){"Escape"===e.key&&N(document.querySelector(".modal_opened"))}function N(e){e.classList.remove("modal_opened"),document.removeEventListener("keydown",B),e.removeEventListener("mousedown",D)}function O(e){const t=P.content.querySelector(".card").cloneNode(!0),r=t.querySelector(".card__title"),o=t.querySelector(".card__image"),n=t.querySelector(".card__like-btn"),a=t.querySelector(".card__delete-btn");return e.isLiked&&n.classList.add("card__like-btn_liked"),r.textContent=e.name,o.src=e.link,o.alt=e.name,n.addEventListener("click",(t=>function(e,t){const r=e.target.classList.contains("card__like-btn_liked");T.changeLikeStatus(t,r).then((t=>{e.target.classList.toggle("card__like-btn_liked")})).catch(console.error)}(t,e._id))),a.addEventListener("click",(r=>function(e,t){I=e,A=t,w(L)}(t,e._id))),o.addEventListener("click",(()=>{w($),j.src=e.link,U.textContent=e.name,j.alt=e.name})),t}s.addEventListener("click",(()=>{var r,o;f.value=i.textContent,v.value=d.textContent,r=h,o=e,[f,v].forEach((e=>{t(r,e,o)})),w(_)})),l.addEventListener("click",(()=>{w(S)})),h.addEventListener("submit",(function(e){e.preventDefault();const t=e.submitter;a(t,!0,"Save","Saving..."),T.editUserInfo({name:f.value,about:v.value}).then((e=>{i.textContent=e.name,d.textContent=e.about,N(_)})).catch(console.error).finally((()=>{a(t,!1)}))})),y.addEventListener("submit",(function(t){t.preventDefault();const r=t.submitter;a(r,!0,"Save","Saving...");const n={name:p.value,link:q.value};T.addCard(n).then((t=>{const r=O(n);x.prepend(r),o(b,e),N(S),u.reset()})).catch(console.error).finally((()=>{a(r,!1)}))})),c.addEventListener("click",(()=>{w(E)})),k.addEventListener("submit",(function(e){e.preventDefault();const t=e.submitter;a(t,!0,"Save","Saving..."),T.editAvatarInfo(g.value).then((e=>{m.src=e.avatar,N(E)})).catch(console.error).finally((()=>{a(t,!1)}))})),C.addEventListener("submit",(function(e){e.preventDefault();const t=e.submitter;t.textContent="Deleting...",T.deleteCard(A).then((()=>{I.remove(),N(L)})).catch(console.error).finally((()=>{t.textContent="Delete"}))})),document.querySelector(".modal__close-btn_type_preview"),document.querySelector("#preview-modal"),n(e)}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,